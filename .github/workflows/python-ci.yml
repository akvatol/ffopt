name: Python CI

on:
  push:
    branches:
      - main
      - develop
  pull_request:
    branches:
      - main
      - develop

jobs:
  linting:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: astral-sh/ruff-action@v1

  test:
    needs: linting
    strategy:
      matrix:
        python-version: [3.11]
        os: [ubuntu-latest]
    runs-on: ${{ matrix.os }}
    steps:
      # Checkout the repository
      - name: Checkout repository
        uses: actions/checkout@v3
      # Set up Python environment
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      # Install poetry
      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
          virtualenvs-path: .venv
          installer-parallel: true

      # Install dependencies (Poetry or pip)
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pytest
          poetry install --no-interaction --no-root
      - name: Test with pytest
        run: |  
          coverage run -m pytest  -v -s
      - name: Generate Coverage Report
        run: |  
          coverage report -m
